{"version":3,"sources":["modules/aside.js"],"names":["angular","contentTemplate","provider","container","this","defaults","element","backdrop","keyboard","html","show","$get","AsideFactory","$aside","options","config","directive","requestAnimationFrame","restrict","$modal","link","scope","isDefined","key","falseValueRegExp","forEach","attr","$observe","newValue","oldValue","bsAside","$watch","extend","content","aside","trigger","on","toggle","$on","destroy"],"mappings":"AAOA,YAEAA,SAGMC,OAAAA,wBAAiB,yBAAAC,SAAA,SAAA,WAFrB,GAGIC,GAAWC,KAAAC,UACXC,UAAS,0BACTC,YAAU,QACVC,YAAU,QACVC,UAAM,QACNC,SAAM,uBAFRT,iBAAiB,EAKjBG,WAAKO,EAEHL,QAASM,KAJXL,UAMQM,EALRL,UAQQM,EAPRL,MASII,EARJH,MAUI,EARNN,MAYIO,MAAOC,SAAAA,SAAAA,GAXT,QAASA,GAAaG,GAiBvBC,GAAAA,MAEKC,EAAAA,QAAAA,UAAgCA,EAAAA,EAGlCC,OADFL,GAAAM,EAAAL,GAGEM,MAAMR,OAhBTI,UAkBoBK,WAAOA,UAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,GAAgBf,EAAAA,uBAAAA,EAAAA,UAhB5C,QACEY,SAAU,MACVG,OAeIrB,EAdJoB,KAeM,SAAWE,EAAeC,EAAOT,EAAQS,GAd7C,GAAIT,IAkBFO,MAAIG,EACJxB,QAAQyB,EACNf,MAAGV,EAKLA,SAAQyB,SAAS,WAAS,kBAAqBF,YAAAA,WAAAA,WAAAA,OAAAA,YAAAA,aAAAA,SAAAA,GAC7CG,QAAKH,UAAaI,EAASJ,MAAKT,EAASc,GAAAA,EAAUC,KAlBvD,IAAIL,GAAmB,eACvBxB,SAAQyB,SAAU,WAAY,WAAY,OAAQ,aAAe,SAASF,GAuBnEO,QAAAA,UAAiBC,EAAOL,KAAKI,EAAkBF,KAAAA,EAAUC,MAAAA,EAAAA,IAAAA,KApBhE7B,QAsBMA,SAAQgC,QAAcJ,WAAAA,SAAAA,GArB1BF,EAAKH,IAsBIG,EAAAC,SAAAJ,EAAA,SAAAK,EAAAC,GACLR,EAAMY,GAAAA,EAAUL,YAAAA,OAKpBF,EAAIQ,SAAQrB,EAAOC,OAAAA,EAAAA,QAAAA,SAAAA,EAAAA,GAGnBR,QAAWoB,SAAKS,GAGhBd,QAAUW,OAAAX,EAAYO,GAEpBd,EAAAA,QAAUc,IA1BX,EACH,IAAIM,GAAQrB,EAAOC,EACnBR,GAAQ8B,GAAGV,EAAKS,SAAW,QAASD,EAAMG,QAC1ChB,EAAMiB,IAAI,WAAY,WAChBJ,GAAOA,EAAMK,UACjBzB,EAAU,KACVoB,EAAQ","file":"modules/aside.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\n\n  .provider('$aside', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade-and-slide-right',\n      prefixClass: 'aside',\n      prefixEvent: 'aside',\n      placement: 'right',\n      template: 'aside/aside.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($modal) {\n\n      function AsideFactory(config) {\n\n        var $aside = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $aside = $modal(options);\n\n        return $aside;\n\n      }\n\n      return AsideFactory;\n\n    };\n\n  })\n\n  .directive('bsAside', function($window, $sce, $aside) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['backdrop', 'keyboard', 'html', 'container'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize aside\n        var aside = $aside(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', aside.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (aside) aside.destroy();\n          options = null;\n          aside = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}