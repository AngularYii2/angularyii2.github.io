{"version":3,"sources":["modules/scrollspy.js"],"names":["angular","$get","$document","$rootScope","dimensions","spies","windowEl","defaults","debounce","bodyEl","throttle","nodeName","offset","this","ScrollSpyFactory","config","scrollEl","isWindowSpy","scrollId","element","options","id","$$count","$scrollspy","unbindViewContentLoaded","unbindIncludeContentLoaded","trackedElements","$trackedElements","sortedElements","activeTarget","debouncedCheckPosition","viewportHeight","throttledCheckPosition","debouncedCheckOffsets","scrollTop","link","checkPositionWithEventLoop","on","checkOffsets","$on","off","checkPosition","i","isUndefined","prop","docEl","target","$activateElement","length","offsetTop","setTimeout","activeElement","source","$getTrackedElement","addClass","removeClass","parent","filter","targetElement","document","querySelector","trackedElement","el","forEach","b","top","trackElement","push","toDelete","untrackElement","splice","activate","directive","restrict","init","extend","body","scope","key","scrollspy","destroy","compile","childEl","attr","children","querySelectorAll","child"],"mappings":"AAOA,YAEAA,SAMSC,OAAAA,4BAAA,kCAAA,sCAAyBC,SAAWC,aAAYC,WALvD,GAOIC,GAAIC,KAAWN,WACfO,EAAYP,KAAAA,UACZQ,SAAIC,IAIJC,SAASC,IATXC,OAUI,IARNC,MAWIZ,MAASa,UAAAA,YAAiBC,aAAAA,aAAAA,WAAAA,WAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAP5B,QAaQC,GAAWC,EAAAA,GACf,MAAIC,GAAWD,GAAAA,UAAcE,EAAA,GAAWC,SAAQC,gBAAAA,EAAAA,cAXpD,QAeMhB,GAAgBiB,GAdpB,GAeIF,GAAOf,QAAMa,UAAAA,EAAAA,EAdZE,GAAQD,UAASC,EAAQD,QAAUV,EAiBtC,IAAIc,GAAAA,EAAAA,EAAAA,QAAAA,QAGAC,EAAAA,EAAyBC,EAAAA,EAAAA,QACzBC,EAAAA,EAAkBH,SAAWI,EAAAA,EACjC,IAAIC,EAAAA,GAEJ,MADAvB,GAAIwB,GAAAA,UACAC,EAAAA,EAEJ,IACIC,GAAAA,EAMFlB,EAGAiB,EACAE,EACAhB,EACAV,EACAU,EAdEiB,KAEAC,EAAAA,EAAAA,oBAEJX,IA+JFY,OA3KAZ,GAwBIU,KAAAA,WACAT,KAAAA,QAAAA,EACAC,EAAAA,EAA6BtB,KAAAA,cAAeiB,EAAAZ,UAC5CyB,EAAAA,EAAAA,KAAAA,cAAAA,EAAAA,UAGAjB,EAAGE,GAAAA,QAAUL,KAAAuB,4BAzBf9B,EA0BUY,GAAAA,SAAYK,GAzBtBP,EAASqB,GAAG,SAAUL,GACtBC,EAAwBzB,EAASK,KAAKyB,aAAclB,EAAQZ,UA6B5De,EAAqBpB,EAAAoC,IAAA,qBAAAN,GAGnBpB,EAAKS,EAAAA,IAAAA,wBAAAA,GACLW,IACEf,IA7BFb,EAAMa,GAAYK,IAGtBA,EAgCaiB,QAAI,WACbhB,KAAAA,UACAC,KAAAA,QAAAA,IA7BFT,EAASwB,IAAI,QAAS3B,KAAKuB,4BAC3B9B,EAASkC,IAAI,SAAUV,GAkCvBP,EAAWkB,IAAAA,SAAAA,GAGTjB,IAGAU,IAGAH,SAGGG,GAAAA,KAtCPX,EA2CamB,cAAId,WA1Cf,GA2CIA,EAAWe,OA3Cf,CAGA,GAFAT,GA2COL,EAAiBD,EAAAA,YAA0BZ,EAAA4B,KAAA,eAAA,EA1ClDb,EA2COG,KAAYN,IAAAA,EAAec,YAAcG,EAAAD,KAAA,iBAC5CV,EAAGN,EAAyBM,GAAAA,WAAYN,IAAmBA,EAAc,GAAAkB,OACzE,MAAOvB,GAAWwB,iBAAiBnB,EAAec,GAzCtD,KAAK,GAAIA,GAAId,EAAeoB,OAAQN,KA8CpCnB,IAAAA,QAAWa,YAAAA,EAA6BM,GAAAO,YAAA,OAAArB,EAAAc,GAAAO,WAGtCC,IAAsBT,EAAeC,GAAAI,UA9CjCZ,EAAYN,EAAec,GAAGO,WAmDpC1B,EAAWwB,EAAAA,IAAmBb,EAASf,EAAAA,EAAAA,GAAAA,WACrC,MAAGU,GAAckB,iBAAAnB,EAAAc,MA/CrBnB,EAkDQ4B,2BAAiC,WAjDvCD,WAkDSvC,EAASwC,cAAcC,IAhDlC7B,EAAWwB,iBAAmB,SAAS5B,GACrC,GAAIU,EAAc,CAChB,GAAIsB,GAAgB5B,EAAW8B,mBAAmBxB,EAmDlDA,KACAV,EAAemC,OAASC,YAAA,UACrB5C,EAASQ,EAAgBiC,OAASzC,OAASQ,EAAQiC,EAAgBI,OAAAA,SAAUA,SAAO,OACrFrC,EAAeqC,OAASA,SAASF,SAASC,YAAA,WAK5C1B,EAAOH,EAAgB+B,OAlDzBtC,EAmDIiC,OAAWN,SAAWA,UACrBnC,EAAAQ,EAAAiC,OAAA,OAAAzC,EAAAQ,EAAAiC,OAAAI,SAAAA,SAAA,OAlDHrC,EAAQiC,OAAOI,SAASA,SAASF,SAAS,WAG9C/B,EAuDUmC,mBAAgBC,SAASC,GAtDjC,MAuDIC,GAAeZ,OAAYS,SAAAA,GAC3B,MAAGtC,GAAAA,SAAkByC,IAtDtB,IAELtC,EAyDauC,aAAGb,WAxDdjD,QA0DQ+D,QAAArC,EAAYsC,SAAAA,GAChB,GAAAN,GAAST,SAAcA,cAAAA,EAAAA,OAzDzBY,GAAeZ,UAAYS,EAAgBtD,EAAWQ,OAAO8C,GAAeO,IAAM,KA4DlFnC,EAAAA,QAAAA,OAAAA,EAAAA,YAAAA,EAAAA,WAAAA,EAAAA,EAAAA,UAIFP,EAAW2C,EAAwBpB,OAAAA,SAAQM,GACzC1B,MAAgByC,QAAhBzC,EAAAA,YAAsBoB,KAAAA,SAAQA,EAAAA,GAAQM,MAAAA,GAAQA,UAAAA,EAAAA,YAzDhDtB,KAEFP,EA2DQ6C,aAAAA,SAAAA,EAAAA,GACJ1C,EAAaA,MACXoB,OAAGpB,EA1DL0B,OA2DIgB,KAxDR7C,EAAW8C,eAAiB,SAASvB,EAAQM,GAE3C,IAAK,GA0DH1B,GA1DOgB,EAAIhB,EAAgBsB,OAAQN,KA6DrCnB,GAAAA,EAAsBmB,GAAAI,SAASJ,GAAAA,EAAAA,GAAAA,SAAAA,EAAAA,CAC7BhB,EAAAA,CA3DE,OAGJA,EAAkBA,EAAgB4C,OAAOF,EAAU,IAErD7C,EAAWgD,SAAW,SAAS7B,GAsElC8B,EAAU9B,GAAAY,SAAA,WAGPmB,EAAUC,OACJnD,EArMR,GAaIjB,GAAIc,QAAUpB,QAAQ2E,GACtB9B,EAAIzB,QAAQD,QAASC,EAAQD,KAAUV,oBACvCA,EAAIQ,QAAcN,QAASS,EAAQD,SAASyD,KAkHhD,OAsEmBC,OApEpBL,UAqEKxE,eAAiB,aAAU,WAAoB8E,aAAAA,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,GApErD,OACEL,SAAU,MACVtC,KAsEQ4C,SAAYxD,EAAWH,EAAAA,GAC3B2D,GAAAA,IAEAF,MAAMtC,EArERvC,SAuEM+E,SAAUV,SAAAA,UAAuBvB,SAAQ3B,GACzC4D,QAAUC,UAAAA,EAAAA,MAAAA,EAAAA,GAAAA,EAAAA,KArEhB,IAuEI5D,GAAUG,EAAAH,EAtEd2D,GAuEIA,aAAY3D,EAAA0B,OAAA3B,GAtEhB0D,EAAMtC,IAAI,WAAY,WAChBwC,IACFA,EAAUV,eAAejD,EAAQ0B,OAAQ3B,GA6EhDqD,EAAUQ,WAGPP,EAAU,KACVQ,EAAS,YAzEVT,UA6EKU,mBAAsB,aAAoBC,WAAK,aAAeD,aAAa,SAAA/E,EAAAK,EAAAJ,EAAAmB,GA5EnF,OACEkD,SAAU,IACVQ,QAAS,SAAkB9D,EAASgE,GAClC,GAAIC,GAAWjE,EAAQ,GAAGkE,iBAAiB,eAC3CrF,SAAQ+D,QAAQqB,EAAU,SAASE,GACjC,GAAIJ,GAAUlF,QAAQmB,QAAQmE,EAC9BJ,GAAQ1B,SAAS2B,KAAK,eAAgB,IAAIA,KAAK,cAAeD,EAAQC,KAAK","file":"modules/scrollspy.min.js","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.scrollspy', ['mgcrea.ngStrap.helpers.debounce', 'mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$scrollspy', function() {\n\n    // Pool of registered spies\n    var spies = this.$$spies = {};\n\n    var defaults = this.defaults = {\n      debounce: 150,\n      throttle: 100,\n      offset: 100\n    };\n\n    this.$get = function($window, $document, $rootScope, dimensions, debounce, throttle) {\n\n      var windowEl = angular.element($window);\n      var docEl = angular.element($document.prop('documentElement'));\n      var bodyEl = angular.element($window.document.body);\n\n      // Helper functions\n\n      function nodeName(element, name) {\n        return element[0].nodeName && element[0].nodeName.toLowerCase() === name.toLowerCase();\n      }\n\n      function ScrollSpyFactory(config) {\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n        if(!options.element) options.element = bodyEl;\n        var isWindowSpy = nodeName(options.element, 'body');\n        var scrollEl = isWindowSpy ? windowEl : options.element;\n        var scrollId = isWindowSpy ? 'window' : options.id;\n\n        // Use existing spy\n        if(spies[scrollId]) {\n          spies[scrollId].$$count++;\n          return spies[scrollId];\n        }\n\n        var $scrollspy = {};\n\n        // Private vars\n        var unbindViewContentLoaded, unbindIncludeContentLoaded;\n        var trackedElements = $scrollspy.$trackedElements = [];\n        var sortedElements = [];\n        var activeTarget;\n        var debouncedCheckPosition;\n        var throttledCheckPosition;\n        var debouncedCheckOffsets;\n        var viewportHeight;\n        var scrollTop;\n\n        $scrollspy.init = function() {\n\n          // Setup internal ref counter\n          this.$$count = 1;\n\n          // Bind events\n          debouncedCheckPosition = debounce(this.checkPosition, options.debounce);\n          throttledCheckPosition = throttle(this.checkPosition, options.throttle);\n          scrollEl.on('click', this.checkPositionWithEventLoop);\n          windowEl.on('resize', debouncedCheckPosition);\n          scrollEl.on('scroll', throttledCheckPosition);\n\n          debouncedCheckOffsets = debounce(this.checkOffsets, options.debounce);\n          unbindViewContentLoaded = $rootScope.$on('$viewContentLoaded', debouncedCheckOffsets);\n          unbindIncludeContentLoaded = $rootScope.$on('$includeContentLoaded', debouncedCheckOffsets);\n          debouncedCheckOffsets();\n\n          // Register spy for reuse\n          if(scrollId) {\n            spies[scrollId] = $scrollspy;\n          }\n\n        };\n\n        $scrollspy.destroy = function() {\n\n          // Check internal ref counter\n          this.$$count--;\n          if(this.$$count > 0) {\n            return;\n          }\n\n          // Unbind events\n          scrollEl.off('click', this.checkPositionWithEventLoop);\n          windowEl.off('resize', debouncedCheckPosition);\n          scrollEl.off('scroll', throttledCheckPosition);\n          unbindViewContentLoaded();\n          unbindIncludeContentLoaded();\n          if (scrollId) {\n            delete spies[scrollId];\n          }\n        };\n\n        $scrollspy.checkPosition = function() {\n\n          // Not ready yet\n          if(!sortedElements.length) return;\n\n          // Calculate the scroll position\n          scrollTop = (isWindowSpy ? $window.pageYOffset : scrollEl.prop('scrollTop')) || 0;\n\n          // Calculate the viewport height for use by the components\n          viewportHeight = Math.max($window.innerHeight, docEl.prop('clientHeight'));\n\n          // Activate first element if scroll is smaller\n          if(scrollTop < sortedElements[0].offsetTop && activeTarget !== sortedElements[0].target) {\n            return $scrollspy.$activateElement(sortedElements[0]);\n          }\n\n          // Activate proper element\n          for (var i = sortedElements.length; i--;) {\n            if(angular.isUndefined(sortedElements[i].offsetTop) || sortedElements[i].offsetTop === null) continue;\n            if(activeTarget === sortedElements[i].target) continue;\n            if(scrollTop < sortedElements[i].offsetTop) continue;\n            if(sortedElements[i + 1] && scrollTop > sortedElements[i + 1].offsetTop) continue;\n            return $scrollspy.$activateElement(sortedElements[i]);\n          }\n\n        };\n\n        $scrollspy.checkPositionWithEventLoop = function() {\n          // IE 9 throws an error if we use 'this' instead of '$scrollspy'\n          // in this setTimeout call\n          setTimeout($scrollspy.checkPosition, 1);\n        };\n\n        // Protected methods\n\n        $scrollspy.$activateElement = function(element) {\n          if(activeTarget) {\n            var activeElement = $scrollspy.$getTrackedElement(activeTarget);\n            if(activeElement) {\n              activeElement.source.removeClass('active');\n              if(nodeName(activeElement.source, 'li') && nodeName(activeElement.source.parent().parent(), 'li')) {\n                activeElement.source.parent().parent().removeClass('active');\n              }\n            }\n          }\n          activeTarget = element.target;\n          element.source.addClass('active');\n          if(nodeName(element.source, 'li') && nodeName(element.source.parent().parent(), 'li')) {\n            element.source.parent().parent().addClass('active');\n          }\n        };\n\n        $scrollspy.$getTrackedElement = function(target) {\n          return trackedElements.filter(function(obj) {\n            return obj.target === target;\n          })[0];\n        };\n\n        // Track offsets behavior\n\n        $scrollspy.checkOffsets = function() {\n\n          angular.forEach(trackedElements, function(trackedElement) {\n            var targetElement = document.querySelector(trackedElement.target);\n            trackedElement.offsetTop = targetElement ? dimensions.offset(targetElement).top : null;\n            if(options.offset && trackedElement.offsetTop !== null) trackedElement.offsetTop -= options.offset * 1;\n          });\n\n          sortedElements = trackedElements\n          .filter(function(el) {\n            return el.offsetTop !== null;\n          })\n          .sort(function(a, b) {\n            return a.offsetTop - b.offsetTop;\n          });\n\n          debouncedCheckPosition();\n\n        };\n\n        $scrollspy.trackElement = function(target, source) {\n          trackedElements.push({target: target, source: source});\n        };\n\n        $scrollspy.untrackElement = function(target, source) {\n          var toDelete;\n          for (var i = trackedElements.length; i--;) {\n            if(trackedElements[i].target === target && trackedElements[i].source === source) {\n              toDelete = i;\n              break;\n            }\n          }\n          trackedElements = trackedElements.splice(toDelete, 1);\n        };\n\n        $scrollspy.activate = function(i) {\n          trackedElements[i].addClass('active');\n        };\n\n        // Initialize plugin\n\n        $scrollspy.init();\n        return $scrollspy;\n\n      }\n\n      return ScrollSpyFactory;\n\n    };\n\n  })\n\n  .directive('bsScrollspy', function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'EAC',\n      link: function postLink(scope, element, attr) {\n\n        var options = {scope: scope};\n        angular.forEach(['offset', 'target'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        var scrollspy = $scrollspy(options);\n        scrollspy.trackElement(options.target, element);\n\n        scope.$on('$destroy', function() {\n          if (scrollspy) {\n            scrollspy.untrackElement(options.target, element);\n            scrollspy.destroy();\n          }\n          options = null;\n          scrollspy = null;\n        });\n\n      }\n    };\n\n  })\n\n\n  .directive('bsScrollspyList', function($rootScope, debounce, dimensions, $scrollspy) {\n\n    return {\n      restrict: 'A',\n      compile: function postLink(element, attr) {\n        var children = element[0].querySelectorAll('li > a[href]');\n        angular.forEach(children, function(child) {\n          var childEl = angular.element(child);\n          childEl.parent().attr('bs-scrollspy', '').attr('data-target', childEl.attr('href'));\n        });\n      }\n\n    };\n\n  });\n"],"sourceRoot":"/source/"}