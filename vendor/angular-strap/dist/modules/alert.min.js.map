{"version":3,"sources":["modules/alert.js"],"names":["angular","container","provider","element","this","defaults","backdrop","keyboard","show","duration","type","dismissable","$get","AlertFactory","$alert","options","$scope","config","extend","$timeout","hide","restrict","link","directive","scope","isDefined","key","falseValueRegExp","forEach","hasOwnProperty","title","attr","newValue","oldValue","trustAsHtml","bsAlert","$observe","content","alert","trigger","on","toggle","$on","destroy"],"mappings":"AAOA,YAEAA,SAOMC,OAAW,wBAAA,yBAAAC,SAAA,SAAA,WANf,GAOIC,GAASC,KAAAC,UACTC,UAAU,UACVC,YAAU,QACVC,YAAM,QAENC,UAAU,KACVC,SAAM,uBACNC,WAAAA,EAPFR,QAAS,KAUTC,UAAKQ,EAEHL,UAASM,EATXL,MAWQM,EAVRL,UAaQM,EAZRL,MAcII,EAbJH,aAgBWK,EAdbZ,MAAKQ,MAgBUI,SAAON,WAAeA,SAAAA,EAAAA,GAfnC,QAASG,GAAaI,GAmBlB,GAAIT,MACDO,EAAQN,QAAUS,UAAAb,EAAAY,EAjBvBH,GAkBWN,EAAOO,GAjBlBD,EAkBMN,OAAAA,cAAAA,EAAAA,YACAW,EAAAA,OAjBJL,EAkBMA,OAAOM,KAAAA,EAAAA,KAhBf,IAAIZ,GAAOM,EAAON,IAoClBa,OAnCIN,GAAQN,WAoBVK,EAAOA,KAAAA,WAlBLN,IAsBJW,EAAON,WApBDC,EAAOM,QA0BN,IAAAL,EAAAN,YAKPY,EAEAC,MAAMT,OAzBTU,UA4BoBC,WAAOA,UAAAA,OAAAA,SAAAA,SAAAA,EAAAA,EAAAA,GAAgBrB,EAAAA,uBAAAA,EAAAA,UA1B5C,QACEkB,SAAU,MACVG,OAyBIxB,EAxBJsB,KAyBM,SAAWG,EAAeC,EAAOX,EAAQW,GAxB7C,GAAIX,IA4BFS,MAAIG,EACJ3B,QAAQ4B,EACNpB,MAAGR,EAMLA,SAAKwB,SAAMK,WAAe,YAAS,WAAA,OAAA,YAAA,YAAA,WAAA,eAAA,SAAAH,GACjCF,QAAMM,UAAQC,EAAAL,MAAAX,EAAAW,GAAAK,EAAAL,KAIhB1B,IAAAA,GAAiB,eAhCnBA,SAiCS0B,SAAQK,WAAcL,OAAK,YAASM,eAAUC,SAAAA,GACjDT,QAAME,UAAYQ,EAAAA,KAAYF,EAAAA,KAAAA,EAAAA,MAAAA,EAAAA,IAAAA,KA/B/BR,EAAMK,eAAe,WAoCxBE,EAAKI,MAAWX,IAjClBxB,QAmCMA,SAAQkB,QAAcc,UAAAA,QAAAA,SAAAA,GAlC1BD,EAAKL,IAmCIK,EAAAK,SAAAV,EAAA,SAAAM,EAAAC,GACLT,EAAMa,GAAAA,EAAUL,YAAAA,OAKpBD,EAAIO,SAAQxB,EAAOC,OAAAA,EAAAA,QAAAA,SAAAA,EAAAA,GAGnBZ,QAAW4B,SAAKQ,GAGhBf,QAAUN,OAAAM,EAAYQ,GAEpBjB,EAAAA,QAAUiB,IAvCX,EACH,IAAIM,GAAQxB,EAAOC,EACnBZ,GAAQqC,GAAGT,EAAKQ,SAAW,QAASD,EAAMG,QAC1CjB,EAAMkB,IAAI,WAAY,WAChBJ,GAAOA,EAAMK,UACjB5B,EAAU,KACVuB,EAAQ","file":"modules/alert.min.js","sourcesContent":["'use strict';\n\n// @BUG: following snippet won't compile correctly\n// @TODO: submit issue to core\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\n\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\n\n  .provider('$alert', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      prefixClass: 'alert',\n      prefixEvent: 'alert',\n      placement: null,\n      template: 'alert/alert.tpl.html',\n      container: false,\n      element: null,\n      backdrop: false,\n      keyboard: true,\n      show: true,\n      // Specific options\n      duration: false,\n      type: false,\n      dismissable: true\n    };\n\n    this.$get = function($modal, $timeout) {\n\n      function AlertFactory(config) {\n\n        var $alert = {};\n\n        // Common vars\n        var options = angular.extend({}, defaults, config);\n\n        $alert = $modal(options);\n\n        // Support scope as string options [/*title, content, */ type, dismissable]\n        $alert.$scope.dismissable = !!options.dismissable;\n        if(options.type) {\n          $alert.$scope.type = options.type;\n        }\n\n        // Support auto-close duration\n        var show = $alert.show;\n        if(options.duration) {\n          $alert.show = function() {\n            show();\n            $timeout(function() {\n              $alert.hide();\n            }, options.duration * 1000);\n          };\n        }\n\n        return $alert;\n\n      }\n\n      return AlertFactory;\n\n    };\n\n  })\n\n  .directive('bsAlert', function($window, $sce, $alert) {\n\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // use string regex match boolean attr falsy values, leave truthy values be\n        var falseValueRegExp = /^(false|0|)$/i;\n        angular.forEach(['keyboard', 'html', 'container', 'dismissable'], function(key) {\n          if(angular.isDefined(attr[key]) && falseValueRegExp.test(attr[key]))\n            options[key] = false;\n        });\n\n        // overwrite inherited title value when no value specified\n        // fix for angular 1.3.1 531a8de72c439d8ddd064874bf364c00cedabb11\n        if (!scope.hasOwnProperty('title')){\n          scope.title = '';\n        }\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content', 'type'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize alert\n        var alert = $alert(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', alert.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          if (alert) alert.destroy();\n          options = null;\n          alert = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}